

public class VersionDiscript {

	// test32333444444443333
/// <summary>
/// このクラスは何もしない、ただバージョン説明を内部で管理したかった。
/// </summary>
/*
  //1.1.0.0 2017.8.5
	* 一旦大量巻き戻した
	* Aiのコア部分が大体完成 
	* 下のBugはすでに直した。
	* 以降はDataを用意するので、一旦ブランチを切る
	* 1.1.0.2に進む

	/// Bug 
	/// 重大なBug
			* [1.1.0.1] 2017.5.30
			**************************************************
			  すでに爆発したプレートにタッチすると、爆弾が生成される。
			**************************************************
				後ろのブロックにレイが飛んでHitしたのでは？
			
	/// 普通のBug
	/// ヒストリー化必要なBug
	/// 修正中のBug

	[1.0.0.1] 2017.5.30
	* 各フィールド用の乱数クラスを作った、検証はしていない。
	* Debug用のエディター拡張のデフォルト値を5にした。
	* DebugCreateFiled()をFieldManagerの内部に移動した。
	* NumberPalteを180度回転させた。数字の表示方向が逆目だったから。
	* 重大なBugを発見した。
	[1.0.0.1] 2017.5.28
	* 主に、前回のTODOに対し、作業をしていた。
	  * シフト演算でDebugMessagerManagerを実装した。
	  * 爆発のエフェクトを実装した。
	* ナンバープレートを実装した。
	  * 仕様としは、壊されていないブロックのみに対し検索を実行する。
	* 将来の開発に向けて、準備作業を行なった。

	* TODO 
	  * 現段階は難しいが、フィールドの分割機能を実装する。
	  * スースの中にはヌルポの可能性は結構あるので、いずれチェック処理を行う。
	  * ゲームステートの管理仕様作成
	
	
	[1.0.0.1] 2017.5.21
	* 主に本番開発に向けて、データー構成を決定した。
	　* リソースホルダーを統一し、ResourceManagerで管理するようにした。
		ただ、CreateInstanceにはBattleSceneを依存している部分があるので、なんとかしたい。
	　* Commonクラスに関しては、完全に独立させ、共通処理だけを待たせるようにした。
	* ソースマネジメントのために、爆弾をフィールドアイテムに統一した。
	　　ただ、将来の開発傾向を遠慮し、BombDataの中には自分のBombTypeを使用する。BombTypeはItemTypeの子となる。
	* BombManagerはあるけど、現段階には使わない。
	
	* TODO
	  * スースの中にはヌルポの可能性は結構あるので、いずれチェック処理を行う。
	  * デバッグメッセージが増えていくので、DebugMessagerManagerを作成。
	  * 爆弾の爆発エフェクトを作成
	  * ゲームステートの管理仕様作成

*/

}
